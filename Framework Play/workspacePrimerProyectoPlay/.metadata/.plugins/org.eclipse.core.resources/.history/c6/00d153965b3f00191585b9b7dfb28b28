# https://www.playframework.com/documentation/latest/Configuration
application.name= "Prueba Jhon"
app="Jhompe"
url="localhost:9000"

# Se configura la posicion del control de errores
play.http.errorHandler = "controllers.ErrorHandler"


#Configuracion para borrar los archivos temporales.
play.temporaryFile {
  reaper {
    enabled = true
    initialDelay = "5 minutes"
    interval = "30 seconds"
    olderThan = "30 minutes"
  }
}

# Habilitar la configuracion de modulos de configuracion.
play.modules.enabled += "modules.ActorsModule"
play.modules.enabled += "modules.GuiceModule"

#Habilitar la carga de la aplicacion.
play.application.loader = "modules.CustomApplicationLoader"


#Asignacion de filtro main
play.filters.enabled += filters.mainFilter

## Configuración del filtro CORS
  # https://www.playframework.com/documentation/latest/CorsFilter
  # ~~~~~
  # CORS es un protocolo que permite que las aplicaciones web realicen solicitudes desde el navegador.
  # NOTA: DEBE aplicar la configuración de CORS antes del filtro CSRF, ya que CSRF tiene
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
   # Filtra las rutas por una lista blanca de prefijos de ruta.
    #pathPrefixes = ["/some/path", ...]

    # Los orígenes permitidos. Si es nulo, todos los orígenes están permitidos.
    #allowedOrigins = ["http://www.example.com"]

    # Los métodos HTTP permitidos. Si es nulo, todos los métodos están permitidos.
    allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]
}

##Configuracion del filtro Secutrity Headers
# Define los encabezados de seguridad que evitan los ataques XSS.
Si está habilitado, entonces todas las opciones se configuran de manera predeterminada en la siguiente configuración:
play.filters.enabled += "play.filters.headers.SecurityHeadersFilter"